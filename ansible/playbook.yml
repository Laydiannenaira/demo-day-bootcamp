- name: Deploy da aplicaÃ§Ã£o FastAPI com Docker
  hosts: fastapi
  become: true

  vars:
    app_name: fastapi-app               
    dockerfile_src: ../Dockerfile    
    source_geral: ../
    app_src: ../app/                 # ðŸ”§ Caminho do cÃ³digo da app localmente
    project_dest: .  # ðŸ”§ Destino na EC2
    app_dest: ./app        # ðŸ”§ Destino na EC2
    internal_port: 8000                  # ðŸ”§ Porta do container
    external_port: 80                    # ðŸ”§ Porta exposta na EC2

  tasks:
    - name: Instala Docker
      yum:
        name: docker
        state: present

    - name: Inicia e habilita Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Copia o uv.lock para a EC2
      copy:
        src: "{{ source_geral }}/uv.lock"
        dest: "{{ project_dest }}"
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    - name: Copia o pyproject.toml para a EC2
      copy:
        src: "{{ source_geral }}/pyproject.toml"
        dest: "{{ project_dest }}"
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    - name: Copia a aplicaÃ§Ã£o para a EC2
      copy:
        src: "{{ app_src }}"
        dest: "{{ app_dest }}"
        owner: ec2-user
        group: ec2-user
        mode: 0755

    - name: Copia o Dockerfile para a EC2
      copy:
        src: "{{ dockerfile_src }}"
        dest: "{{ project_dest }}"
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    - name: Build da imagem Docker
      command: docker build -t {{ app_name }} .
      args:
        chdir: "{{ project_dest }}"
      
    - name: Para container antigo se existir
      ignore_errors: true
      command: docker rm -f {{ app_name }}

    - name: Roda o container
      command: docker run -d --name {{ app_name }} -p {{ external_port }}:{{ internal_port }} {{ app_name }}
